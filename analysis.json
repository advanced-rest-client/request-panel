{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A full request and response view for the Advanced REST client.\n\n## Breaking changes in version 2\n\n- does not contain any logic responsible for making a request\n- does not contain any logic responsible for request and response actions\n- does not evaluate variables\n- It only renders view for both request and response panels\n\n## Styling\n\n`<request-panel>` provides the following custom properties and mixins for\nstyling:\n\nCustom property|Description|Default\n---------- | ------------------ | ------\n`--request-panel`|Mixin applied to the element|`{}`\n`--request-panel-progress-color` | Color of the progress bar | `#00A2DF`\n`--request-panel-progress` | Mixin applied to the progress bar | `{}`",
      "summary": "",
      "path": "request-panel.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "editorRequest",
          "type": "Object | null | undefined",
          "description": "A request object that is generated in request edtor.\nIt contains the following properties:\n- url\n- method\n- headers\n- payload\n- queryModel\n- pathModel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 112,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "Computed value. If true then the request is loading.\nThis resets each time the request status changes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "request",
          "type": "Object | null | undefined",
          "description": "Created by the transport ARFC `request` object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 121,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "response",
          "type": "Object | null | undefined",
          "description": "Created by the transport ARC `response` object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 125,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "hasResponse",
          "type": "boolean | null | undefined",
          "description": "Computed value, true, when the response object is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "xhrExtension",
          "type": "boolean | null | undefined",
          "description": "If set then it renders an option in request context menu to\ntoggle to XHR request via the extension. This information is passed\nto the request editor element.\n\nIt's only relevant to ARC Chrome appeditorRequest.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 8
            },
            "end": {
              "line": 140,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "oauth2RedirectUri",
          "type": "string | null | undefined",
          "description": "Redirect URL for the OAuth2 authorization.\nIf can be also set by dispatching `oauth2-redirect-url-changed`\nwith `value` property on the `detail` object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 8
            },
            "end": {
              "line": 146,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "isErrorResponse",
          "type": "boolean | null | undefined",
          "description": "A flag indincating request error.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 150,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "responseIsXhr",
          "type": "boolean | null | undefined",
          "description": "True if the response is made by the Fetch / XHR api.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 8
            },
            "end": {
              "line": 157,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "responseError",
          "type": "Object | null | undefined",
          "description": "An error object associated with the response when error.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 8
            },
            "end": {
              "line": 161,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "loadingTime",
          "type": "number | null | undefined",
          "description": "Response full loading time. This information is received from the\ntransport library.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 8
            },
            "end": {
              "line": 166,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "timing",
          "type": "Object | null | undefined",
          "description": "If the transport method is able to collect detailed information about request timings\nthen this value will be set. It's the `timings` property from the HAR 1.2 spec.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 8
            },
            "end": {
              "line": 171,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "redirectsTiming",
          "type": "Array | null | undefined",
          "description": "If the transport method is able to collect detailed information about redirects timings\nthen this value will be set. It's a list of `timings` property from the HAR 1.2 spec.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 8
            },
            "end": {
              "line": 176,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "redirects",
          "type": "Array | null | undefined",
          "description": "It will be set if the transport method can generate information about redirections.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 8
            },
            "end": {
              "line": 180,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "sourceMessage",
          "type": "string | null | undefined",
          "description": "Http message sent to the server.\n\nThis information should be available only in case of advanced HTTP transport.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 186,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "lastRequestId",
          "type": "(String | Number)",
          "description": "ID of latest request.\nIt is received from the `api-request-editor` when `api-request`\nevent is dispatched. When `api-response` event is handled\nthe id is compared and if match it dispays the result.\n\nThis system allows to use different request panels on single app\nand don't mix the results.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasResponse",
          "description": "Computes if there is a reponse object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response",
              "type": "Object",
              "description": "ARC response objects"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_sendRequestHandler",
          "description": "A handler for the API call.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "`api-request` event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_abortHandler",
          "description": "Handler for the `abort-api-request` custom event.\nClears loading state and `lastRequestId` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearHandler",
          "description": "Handler for the `request-clear-state` custom event.\nClears loading state and `lastRequestId` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 4
            },
            "end": {
              "line": 262,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_apiResponseHandler",
          "description": "Handler for the `api-response` custom event. Sets values on the response\npanel when response is ready.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 276,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_propagateResponse",
          "description": "Propagate `api-response` detail object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 294,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "type": "Object",
              "description": "Event's detail object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_changeUrlHandler",
          "description": "Updates value of the request URL from `url-change-action`\ncustom event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 4
            },
            "end": {
              "line": 304,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearResponse",
          "description": "Clears response panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 92,
          "column": 2
        },
        "end": {
          "line": 337,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.RequestPanel",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "editor-request",
          "description": "A request object that is generated in request edtor.\nIt contains the following properties:\n- url\n- method\n- headers\n- payload\n- queryModel\n- pathModel",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 112,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "loading",
          "description": "Computed value. If true then the request is loading.\nThis resets each time the request status changes.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 24
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "request",
          "description": "Created by the transport ARFC `request` object",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 121,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "response",
          "description": "Created by the transport ARC `response` object.",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 125,
              "column": 24
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "has-response",
          "description": "Computed value, true, when the response object is set.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "xhr-extension",
          "description": "If set then it renders an option in request context menu to\ntoggle to XHR request via the extension. This information is passed\nto the request editor element.\n\nIt's only relevant to ARC Chrome appeditorRequest.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 8
            },
            "end": {
              "line": 140,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "oauth2-redirect-uri",
          "description": "Redirect URL for the OAuth2 authorization.\nIf can be also set by dispatching `oauth2-redirect-url-changed`\nwith `value` property on the `detail` object.",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 8
            },
            "end": {
              "line": 146,
              "column": 33
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-error-response",
          "description": "A flag indincating request error.",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 8
            },
            "end": {
              "line": 150,
              "column": 32
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "response-is-xhr",
          "description": "True if the response is made by the Fetch / XHR api.",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 8
            },
            "end": {
              "line": 157,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "response-error",
          "description": "An error object associated with the response when error.",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 8
            },
            "end": {
              "line": 161,
              "column": 29
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "loading-time",
          "description": "Response full loading time. This information is received from the\ntransport library.",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 8
            },
            "end": {
              "line": 166,
              "column": 27
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "timing",
          "description": "If the transport method is able to collect detailed information about request timings\nthen this value will be set. It's the `timings` property from the HAR 1.2 spec.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 8
            },
            "end": {
              "line": 171,
              "column": 22
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "redirects-timing",
          "description": "If the transport method is able to collect detailed information about redirects timings\nthen this value will be set. It's a list of `timings` property from the HAR 1.2 spec.",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 8
            },
            "end": {
              "line": 176,
              "column": 30
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "redirects",
          "description": "It will be set if the transport method can generate information about redirections.",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 8
            },
            "end": {
              "line": 180,
              "column": 24
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "source-message",
          "description": "Http message sent to the server.\n\nThis information should be available only in case of advanced HTTP transport.",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 186,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "last-request-id",
          "description": "ID of latest request.\nIt is received from the `api-request-editor` when `api-request`\nevent is dispatched. When `api-response` event is handled\nthe id is compared and if match it dispays the result.\n\nThis system allows to use different request panels on single app\nand don't mix the results.",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 29
            }
          },
          "metadata": {},
          "type": "(String | Number)"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "editor-request-changed",
          "description": "Fired when the `editorRequest` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "request-panel",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior"
      ]
    }
  ]
}
