{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A full request and response view for the Advanced REST client.\n\n## Breaking changes in version 2\n\n- does not contain any logic responsible for making a request\n- does not contain any logic responsible for request and response actions\n- does not evaluate variables\n- It only renders view for both request and response panels\n\n## Styling\n\n`<request-panel>` provides the following custom properties and mixins for\nstyling:\n\nCustom property|Description|Default\n---------- | ------------------ | ------\n`--request-panel`|Mixin applied to the element|`{}`\n`--request-panel-progress-color` | Color of the progress bar | `#00A2DF`\n`--request-panel-progress` | Mixin applied to the progress bar | `{}`",
      "summary": "",
      "path": "request-panel.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "editorRequest",
          "type": "Object | null | undefined",
          "description": "A request object that is generated in request edtor.\nIt contains the following properties:\n- url\n- method\n- headers\n- payload\n- queryModel\n- pathModel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "Computed value. If true then the request is loading.\nThis resets each time the request status changes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 8
            },
            "end": {
              "line": 120,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "request",
          "type": "Object | null | undefined",
          "description": "Created by the transport ARFC `request` object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 8
            },
            "end": {
              "line": 124,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "response",
          "type": "Object | null | undefined",
          "description": "Created by the transport ARC `response` object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 8
            },
            "end": {
              "line": 128,
              "column": 46
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "hasResponse",
          "type": "boolean | null | undefined",
          "description": "Computed value, true, when the response object is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 135,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "responseMeta",
          "type": "Object | null | undefined",
          "description": "Request and response meta data passed to the response view.\nKeys:\n- responseIsXhr (Boolean) - True if the response is made by the\nFetch or XHR api.\n- loadingTime (Number) - Response full loading time. This information\nis received from the transport library.\n- timing {Object} - If the transport method is able to collect\ndetailed information about request timings then this value will\nbe set. It's the `timings` property from the HAR 1.2 spec.\n- redirectsTiming (Array) - If the transport method is able to\ncollect detailed information about redirects timings then this value\nwill be set. It's a list of `timings` property from the HAR 1.2 spec.\n- redirects (Array) - It will be set if the transport method can\ngenerate information about redirections.\n- sourceMessage (String) - Http message sent to the server.\nThis information should be available only in case of advanced\nHTTP transport.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 8
            },
            "end": {
              "line": 155,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "oauth2RedirectUri",
          "type": "string | null | undefined",
          "description": "Redirect URL for the OAuth2 authorization.\nIf can be also set by dispatching `oauth2-redirect-url-changed`\nwith `value` property on the `detail` object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 8
            },
            "end": {
              "line": 161,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "isErrorResponse",
          "type": "boolean | null | undefined",
          "description": "A flag indincating request error.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 8
            },
            "end": {
              "line": 165,
              "column": 54
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "responseError",
          "type": "Object | null | undefined",
          "description": "An error object associated with the response when error.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 8
            },
            "end": {
              "line": 169,
              "column": 51
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "lastRequestId",
          "type": "(String | Number)",
          "description": "ID of latest request.\nIt is received from the `api-request-editor` when `api-request`\nevent is dispatched. When `api-response` event is handled\nthe id is compared and if match it dispays the result.\n\nThis system allows to use different request panels on single app\nand don't mix the results.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 181,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "boundEvents",
          "type": "boolean | null | undefined",
          "description": "When set it sets `eventsTarget` to itself and all editor event\nlisteners strats listening on this node.\nThis prohibits editors from getting data from the outside ot this\ncomponent.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 8
            },
            "end": {
              "line": 191,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_boundEventsChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "When set it renders editors in read only mode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "editorState",
          "type": "Object",
          "description": "Request editor UI state object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 200,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 222,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasResponse",
          "description": "Computes if there is a reponse object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response",
              "type": "Object",
              "description": "ARC response objects"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_sendRequestHandler",
          "description": "A handler for the API call.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "`api-request` event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_abortHandler",
          "description": "Handler for the `abort-api-request` custom event.\nClears loading state and `lastRequestId` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearHandler",
          "description": "Handler for the `request-clear-state` custom event.\nClears loading state and `lastRequestId` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 264,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_apiResponseHandler",
          "description": "Handler for the `api-response` custom event. Sets values on the response\npanel when response is ready.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_propagateResponse",
          "description": "Propagate `api-response` detail object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 4
            },
            "end": {
              "line": 298,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "type": "Object",
              "description": "Event's detail object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_changeUrlHandler",
          "description": "Updates value of the request URL from `url-change-action`\ncustom event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearResponse",
          "description": "Clears response panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 325,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_boundEventsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 95,
          "column": 2
        },
        "end": {
          "line": 332,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.RequestPanel",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "editor-request",
          "description": "A request object that is generated in request edtor.\nIt contains the following properties:\n- url\n- method\n- headers\n- payload\n- queryModel\n- pathModel",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "loading",
          "description": "Computed value. If true then the request is loading.\nThis resets each time the request status changes.",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 8
            },
            "end": {
              "line": 120,
              "column": 24
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "request",
          "description": "Created by the transport ARFC `request` object",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 8
            },
            "end": {
              "line": 124,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "response",
          "description": "Created by the transport ARC `response` object.",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 8
            },
            "end": {
              "line": 128,
              "column": 46
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "has-response",
          "description": "Computed value, true, when the response object is set.",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 135,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "response-meta",
          "description": "Request and response meta data passed to the response view.\nKeys:\n- responseIsXhr (Boolean) - True if the response is made by the\nFetch or XHR api.\n- loadingTime (Number) - Response full loading time. This information\nis received from the transport library.\n- timing {Object} - If the transport method is able to collect\ndetailed information about request timings then this value will\nbe set. It's the `timings` property from the HAR 1.2 spec.\n- redirectsTiming (Array) - If the transport method is able to\ncollect detailed information about redirects timings then this value\nwill be set. It's a list of `timings` property from the HAR 1.2 spec.\n- redirects (Array) - It will be set if the transport method can\ngenerate information about redirections.\n- sourceMessage (String) - Http message sent to the server.\nThis information should be available only in case of advanced\nHTTP transport.",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 8
            },
            "end": {
              "line": 155,
              "column": 50
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "oauth2-redirect-uri",
          "description": "Redirect URL for the OAuth2 authorization.\nIf can be also set by dispatching `oauth2-redirect-url-changed`\nwith `value` property on the `detail` object.",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 8
            },
            "end": {
              "line": 161,
              "column": 33
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-error-response",
          "description": "A flag indincating request error.",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 8
            },
            "end": {
              "line": 165,
              "column": 54
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "response-error",
          "description": "An error object associated with the response when error.",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 8
            },
            "end": {
              "line": 169,
              "column": 51
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "last-request-id",
          "description": "ID of latest request.\nIt is received from the `api-request-editor` when `api-request`\nevent is dispatched. When `api-response` event is handled\nthe id is compared and if match it dispays the result.\n\nThis system allows to use different request panels on single app\nand don't mix the results.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 181,
              "column": 29
            }
          },
          "metadata": {},
          "type": "(String | Number)"
        },
        {
          "name": "bound-events",
          "description": "When set it sets `eventsTarget` to itself and all editor event\nlisteners strats listening on this node.\nThis prohibits editors from getting data from the outside ot this\ncomponent.",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 8
            },
            "end": {
              "line": 191,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "When set it renders editors in read only mode.",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "editor-state",
          "description": "Request editor UI state object.",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 200,
              "column": 49
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "editor-request-changed",
          "description": "Fired when the `editorRequest` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-changed",
          "description": "Fired when the `response` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-meta-changed",
          "description": "Fired when the `responseMeta` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "is-error-response-changed",
          "description": "Fired when the `isErrorResponse` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-error-changed",
          "description": "Fired when the `responseError` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "editor-state-changed",
          "description": "Fired when the `editorState` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "request-context-menu",
          "range": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 75
            }
          }
        }
      ],
      "tagname": "request-panel",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior"
      ]
    }
  ]
}
